Sub MergeCommonRecords()

    Dim ws As Worksheet
    Dim logWs As Worksheet
    Dim lastRow As Long, logRow As Long
    Dim i As Long, j As Long
    Dim issue1 As String, issue2 As String
    Dim dom1 As String, dom2 As String
    Dim dereg1 As String, dereg2 As String
    Dim eff1 As Variant, eff2 As Variant
    Dim tmpRow As Range
    
    On Error Resume Next
    Set logWs = ThisWorkbook.Sheets("Merge_Log")
    On Error GoTo 0
    
    ' Create log sheet if not found
    If logWs Is Nothing Then
        Set logWs = ThisWorkbook.Sheets.Add
        logWs.Name = "Merge_Log"
        logWs.Range("A1").Value = "Merged Records Log"
        logWs.Range("A2").Value = "Base Row"
        logWs.Range("B2").Value = "Merged Row"
        logRow = 3
    Else
        logRow = logWs.Cells(logWs.Rows.Count, "A").End(xlUp).Row + 1
    End If
    
    ' Use active sheet
    Set ws = ActiveSheet
    lastRow = ws.Cells(ws.Rows.Count, "A").End(xlUp).Row
    
    Application.ScreenUpdating = False
    Application.EnableEvents = False
    
    ' Loop through each record
    For i = 2 To lastRow - 1
        issue1 = LCase(Trim(ws.Cells(i, "K").Value))   ' Issuing company
        dom1 = LCase(Trim(ws.Cells(i, "L").Value))     ' Domicile
        dereg1 = LCase(Trim(ws.Cells(i, "P").Value))   ' Dereg
        eff1 = ws.Cells(i, "I").Value                  ' Effective date
        
        For j = i + 1 To lastRow
            issue2 = LCase(Trim(ws.Cells(j, "K").Value))
            dom2 = LCase(Trim(ws.Cells(j, "L").Value))
            dereg2 = LCase(Trim(ws.Cells(j, "P").Value))
            eff2 = ws.Cells(j, "I").Value
            
            ' ---- MATCH CONDITIONS ----
            If IsCommon(issue1, issue2) And IsCommon(dom1, dom2) Then
                ' Dereg matches (Both covers Y and N)
                If (dereg1 = dereg2) Or (dereg1 = "both") Or (dereg2 = "both") Then
                    
                    ' Effective date priority — at least one valid date is okay
                    If (Not IsEmpty(eff1)) Or (Not IsEmpty(eff2)) Then
                        
                        ' Move record j below i
                        Set tmpRow = ws.Rows(j)
                        tmpRow.Cut
                        ws.Rows(i + 1).Insert Shift:=xlDown
                        
                        ' Log the merge
                        logWs.Cells(logRow, "A").Value = i
                        logWs.Cells(logRow, "B").Value = j
                        logRow = logRow + 1
                        
                        Application.CutCopyMode = False
                        
                        ' Update lastRow (because we inserted a row)
                        lastRow = ws.Cells(ws.Rows.Count, "A").End(xlUp).Row
                        Exit For
                    End If
                End If
            End If
        Next j
    Next i

    Application.EnableEvents = True
    Application.ScreenUpdating = True
    
    MsgBox "✅ Merging completed successfully! Check 'Merge_Log' sheet for details.", vbInformation

End Sub

' ---- Helper Function: Checks if there is at least one common word between two comma-separated strings ----
Function IsCommon(str1 As String, str2 As String) As Boolean
    Dim arr1() As String, arr2() As String
    Dim x As Long, y As Long
    
    If Trim(str1) = "" Or Trim(str2) = "" Then
        IsCommon = False
        Exit Function
    End If
    
    arr1 = Split(str1, ",")
    arr2 = Split(str2, ",")
    
    For x = LBound(arr1) To UBound(arr1)
        For y = LBound(arr2) To UBound(arr2)
            If Trim(arr1(x)) <> "" And Trim(arr2(y)) <> "" Then
                If InStr(Trim(arr2(y)), Trim(arr1(x))) > 0 Or InStr(Trim(arr1(x)), Trim(arr2(y))) > 0 Then
                    IsCommon = True
                    Exit Function
                End If
            End If
        Next y
    Next x
    
    IsCommon = False
End Function
